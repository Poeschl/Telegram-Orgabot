name: Release version
on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build Rosie
        run: ./gradlew --stacktrace jar shadowJar

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: build/libs/Telegram-Orga-Bot-Rosie-*.jar

  upload-artifact:
    name: Upload artifact
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: build/libs/

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/Telegram-Orga-Bot-Rosie-*.jar

  upload-docker-image:
    name: Upload docker image
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: build/libs/

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/poeschl/telegram-orga-bot-rosie
          tags: type=ref,event=tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
